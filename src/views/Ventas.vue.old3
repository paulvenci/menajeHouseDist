<template>
    <v-container fluid class="pa-4 pa-md-6">
        <div class="barra-fija">
            <v-card elevation="3" class="barra-combinada">
                <div class="d-none d-md-flex align-center justify-space-between pa-3 pa-md-4">
                    <div class="d-flex align-center gap-4">
                        <v-btn color="success" variant="elevated" prepend-icon="mdi-content-save" @click="guardarVentas"
                            class="text-none mr-2" size="default" :disabled="ventasAgregadas.length === 0">
                            Guardar
                        </v-btn>
                        <v-btn color="warning" variant="elevated" prepend-icon="mdi-delete-sweep" @click="limpiarVentas"
                            class="text-none mr-2" size="default" :disabled="ventasAgregadas.length === 0">
                            Limpiar
                        </v-btn>
                        <v-btn color="info" variant="elevated" prepend-icon="mdi-group" @click="agruparVentas"
                            class="text-none mr-2" size="default" :disabled="ventasAgregadas.length === 0">
                            Agrupar
                        </v-btn>
                        <v-btn color="primary" variant="tonal" prepend-icon="mdi-account-plus" @click="dialog = true"
                            class="text-none" size="default">
                            Cliente
                        </v-btn>
                    </div>

                    <div class="d-flex align-center gap-4">
                        <v-chip color="primary" variant="tonal" size="small">
                            <v-icon start size="small">mdi-chart-line</v-icon>
                            {{ estadisticasVentas.total }}
                        </v-chip>
                        <v-chip color="success" variant="tonal" size="small">
                            <v-icon start size="small">mdi-account-check</v-icon>
                            {{ estadisticasVentas.conCliente }}
                        </v-chip>
                        <v-chip color="warning" variant="tonal" size="small">
                            <v-icon start size="small">mdi-calendar-today</v-icon>
                            {{ estadisticasVentas.hoy }}
                        </v-chip>
                        <v-chip color="info" variant="tonal" size="small">
                            {{ formatoMoneda(totalVentas) }}
                        </v-chip>
                    </div>
                </div>

                <div class="d-md-none pa-3">
                    <div class="d-flex align-center justify-center gap-4 mb-4">
                        <v-chip color="primary" variant="tonal" size="x-small">
                            {{ estadisticasVentas.total }}
                        </v-chip>
                        <v-chip color="success" variant="tonal" size="x-small">
                            {{ estadisticasVentas.conCliente }}
                        </v-chip>
                        <v-chip color="warning" variant="tonal" size="x-small">
                            {{ estadisticasVentas.hoy }}
                        </v-chip>
                        <v-chip color="info" variant="tonal" size="x-small">
                            {{ formatoMoneda(totalVentas) }}
                        </v-chip>
                    </div>

                    <div class="d-flex flex-column gap-3">
                        <div class="d-flex gap-3">
                            <v-btn color="success" variant="elevated" prepend-icon="mdi-content-save"
                                @click="guardarVentas" class="text-none flex-1" size="small"
                                :disabled="ventasAgregadas.length === 0">
                                Guardar
                            </v-btn>
                            <v-btn color="warning" variant="elevated" prepend-icon="mdi-delete-sweep"
                                @click="limpiarVentas" class="text-none flex-1" size="small"
                                :disabled="ventasAgregadas.length === 0">
                                Limpiar
                            </v-btn>
                        </div>

                        <div class="d-flex gap-3">
                            <v-btn color="info" variant="elevated" prepend-icon="mdi-group" @click="agruparVentas"
                                class="text-none flex-1" size="small" :disabled="ventasAgregadas.length === 0">
                                Agrupar
                            </v-btn>
                            <v-btn color="primary" variant="tonal" prepend-icon="mdi-account-plus"
                                @click="dialog = true" class="text-none flex-1" size="small" block>
                                Nuevo Cliente
                            </v-btn>
                        </div>
                    </div>
                </div>
            </v-card>
        </div>
        <v-row>
            <v-col cols="12" md="6" lg="5" xl="4">
                <v-card elevation="3" class="h-100">
                    <v-card-title class="d-flex align-center justify-space-between pa-md-6 ">
                        <div class="d-flex align-center">
                            <v-icon color="primary" size="24" size-md="28" class="mr-2 mr-md-3">mdi-cart-plus</v-icon>
                            <span class="text-subtitle-1 text-md-h6 font-weight-medium">Registrar Venta</span>
                        </div>
                        <v-btn icon size="small" variant="tonal" @click="modoEdicion = !modoEdicion"
                            :color="modoEdicion ? 'warning' : 'primary'" class="ml-2">
                            <v-icon>{{ modoEdicion ? 'mdi-check' : 'mdi-drag' }}</v-icon>
                        </v-btn>
                    </v-card-title>

                    <v-card-text class="pa-4 pa-md-6 pt-0">
                        <v-card variant="outlined" class="mb-4 mb-md-6">
                            <v-tabs v-model="tipoSeleccionado" color="primary" grow class="rounded-t">
                                <v-tab value="diaria" class="text-none">
                                    <v-icon start>mdi-calendar</v-icon>
                                    Diaria
                                </v-tab>
                                <v-tab value="live" class="text-none">
                                    <v-icon start>mdi-video</v-icon>
                                    Live
                                </v-tab>
                            </v-tabs>
                        </v-card>

                        <v-form ref="formVenta">
                            <draggable v-model="camposFormulario" :disabled="!modoEdicion" item-key="id"
                                class="campos-draggable" @start="drag = true" @end="onDragEnd">
                                <template #item="{ element: campo }">
                                    <div class="campo-formulario mb-2" :class="{ 'modo-edicion': modoEdicion }">
                                        <div v-if="modoEdicion" class="d-flex align-center mb-2">
                                            <v-icon class="mr-2" color="grey" size="small">mdi-drag</v-icon>
                                            <span class="text-caption text-grey">{{ campo.label }}</span>
                                        </div>

                                        <v-text-field v-if="campo.tipo === 'codigo'" :label="campo.label"
                                            v-model="nuevaVenta.codigo"
                                            :rules="[v => !!v || 'El cÃ³digo es obligatorio']" variant="outlined"
                                            density="comfortable" class="ma-0" prepend-inner-icon="mdi-barcode"
                                            required />

                                        <v-number-input v-else-if="campo.tipo === 'monto'" control-variant="hidden"
                                            :label="campo.label" v-model="nuevaVenta.monto" type="number"
                                            :rules="[v => !!v || 'El monto es obligatorio']" variant="outlined"
                                            density="comfortable" prepend-inner-icon="mdi-currency-usd"
                                            :formatter="formatoMoneda" :min="0" required />

                                        <v-autocomplete v-else-if="campo.tipo === 'cliente'" :label="campo.label"
                                            v-model="nuevaVenta.cliente"
                                            :items="clientesStore.clientes.map(c => c.nombre)" variant="outlined"
                                            density="comfortable" prepend-inner-icon="mdi-account" clearable />

                                        <v-select v-else-if="campo.tipo === 'modoPago'" :label="campo.label"
                                            v-model="nuevaVenta.modoPago" :items="modosPago" item-title="text"
                                            item-value="value" variant="outlined" density="comfortable"
                                            prepend-inner-icon="mdi-credit-card" clearable>
                                            <template v-slot:item="{ props, item }">
                                                <v-list-item v-bind="props">
                                                    <template v-slot:prepend>
                                                        <v-icon :icon="item.raw.icon" color="primary"></v-icon>
                                                    </template>
                                                    <v-list-item-title>{{ item.raw.text }}</v-list-item-title>
                                                </v-list-item>
                                            </template>
                                        </v-select>

                                    </div>
                                </template>
                            </draggable>

                            <v-checkbox v-model="generarRetiro" label="Generar Retiro Pendiente" color="primary"
                                class="mt-0"></v-checkbox>


                            <v-btn color="primary" size="large" block class="mt-6 text-none" prepend-icon="mdi-plus"
                                @click="registrarVenta" :loading="registrando">
                                Registrar Venta
                            </v-btn>
                        </v-form>
                    </v-card-text>
                </v-card>
            </v-col>

            <v-col cols="12" md="6" lg="7" xl="8">
                <v-card elevation="3" class="h-100">
                    <v-card-title class="d-flex align-center justify-space-between pa-4 pa-md-6 pb-4">
                        <div class="d-flex align-center">
                            <v-icon color="success" size="24" size-md="28"
                                class="mr-2 mr-md-3">mdi-format-list-bulleted</v-icon>
                            <span class="text-subtitle-1 text-md-h6 font-weight-medium">
                                Ventas Registradas
                                <v-chip :color="tipoSeleccionado === 'live' ? 'purple' : 'blue'" size="x-small"
                                    variant="tonal" class="ml-2 text-h6 pa-4">
                                    {{ tipoSeleccionado === 'live' ? 'Live' : 'Diaria' }}
                                </v-chip>
                            </span>
                        </div>
                        <v-tooltip location="top">
                            <template v-slot:activator="{ props }">
                                <v-chip color="primary" variant="tonal" v-bind="props">
                                    {{ ventasFiltradas.length }} items
                                </v-chip>
                            </template>
                            <div class="text-center">
                                <div><strong>Total:</strong> {{ estadisticasFiltradas.total }}</div>
                                <div><strong>Con cliente:</strong> {{ estadisticasFiltradas.conCliente }}</div>
                                <div><strong>Hoy:</strong> {{ estadisticasFiltradas.hoy }}</div>
                                <div><strong>Anteriores:</strong> {{ estadisticasFiltradas.anteriores }}</div>
                            </div>
                        </v-tooltip>

                    </v-card-title>

                    <v-card-text class="pa-4 pa-md-6 pt-0">
                        <v-text-field v-model="busquedaVentas" label="Buscar por cÃ³digo o cliente"
                            prepend-inner-icon="mdi-magnify" variant="outlined" density="compact" clearable
                            class="mb-4"></v-text-field>
                        <div v-if="ventasFiltradas.length === 0" class="text-center py-8 py-md-12">
                            <v-icon size="64" color="grey-lighten-1" class="mb-4">mdi-cart-off</v-icon>
                            <h3 v-if="busquedaVentas" class="text-h6 text-grey-darken-1 mb-2">
                                No se encontraron ventas con "{{ busquedaVentas }}"
                            </h3>
                            <h3 v-else class="text-h6 text-grey-darken-1 mb-2">
                                No hay ventas de tipo "{{ tipoSeleccionado }}"
                            </h3>
                            <p class="text-body-2 text-grey">
                                {{ busquedaVentas ? 'Intenta con otra bÃºsqueda.' :
                                    'Cambia el tipo de venta o agrega nuevas ventas' }}
                            </p>
                        </div>

                        <v-list v-else class="pa-0">
                            <v-slide-y-transition group>
                                <v-list-item v-for="(venta, index) in ventasFiltradas" :key="index"
                                    class="mb-3 rounded-lg border" :class="getVentaClass(venta.tipo)">
                                    <template #prepend>
                                        <v-avatar :color="getVentaColor(venta.tipo ?? 'default')" size="40"
                                            variant="tonal">
                                            <v-icon>{{ getVentaIcon(venta.tipo ?? 'default') }}</v-icon>
                                        </v-avatar>
                                    </template>

                                    <v-list-item-title class="font-weight-medium mb-1">
                                        <div class="d-flex align-center justify-space-between">
                                            <span>{{ venta.cliente || 'Cliente desconocido' }}</span>
                                        </div>
                                    </v-list-item-title>

                                    <v-list-item-subtitle>
                                        <div class="d-none d-md-flex align-center flex-wrap gap-3">
                                            <span class="d-flex align-center">
                                                <v-icon size="small" class="mr-1">mdi-barcode</v-icon>
                                                <strong>{{ venta.codigo }}</strong>
                                            </span>
                                            <span class="d-flex align-center">
                                                <strong class="ml-2">{{ formatoMoneda(venta.monto) }}</strong>
                                            </span>
                                            <v-chip class="ml-2" :color="getVentaColor(venta.tipo ?? 'default')"
                                                size="x-small" variant="tonal">
                                                {{ venta.tipo }}
                                            </v-chip>
                                            <v-chip class="ml-2"
                                                :color="esVentaDeHoy(venta.fecha) ? 'success' : 'warning'"
                                                size="x-small" variant="tonal">
                                                <v-icon size="x-small" class="mr-1">
                                                    {{ esVentaDeHoy(venta.fecha) ? 'mdi-calendar-today' :
                                                        'mdi-calendar-clock' }}
                                                </v-icon>
                                                {{ esVentaDeHoy(venta.fecha) ? 'Hoy' : 'Anterior' }}
                                            </v-chip>
                                            <span class="text-caption ml-2 text-light-blue-darken-4">
                                                {{ formatFecha(venta.fecha) }}
                                            </span>
                                        </div>

                                        <div class="d-md-none">
                                            <div class="d-flex flex-column gap-1">
                                                <div class="d-flex align-center justify-space-between">
                                                    <span class="d-flex align-center">
                                                        <v-icon size="small" class="mr-1">mdi-barcode</v-icon>
                                                        <strong>{{ venta.codigo }}</strong>
                                                    </span>
                                                    <div class="d-flex align-center gap-1">
                                                        <v-chip :color="getVentaColor(venta.tipo ?? 'default')"
                                                            size="x-small" variant="tonal">
                                                            {{ venta.tipo }}
                                                        </v-chip>
                                                        <v-chip
                                                            :color="esVentaDeHoy(venta.fecha) ? 'success' : 'warning'"
                                                            size="x-small" variant="tonal">
                                                            <v-icon size="x-small">
                                                                {{ esVentaDeHoy(venta.fecha) ? 'mdi-calendar-today' :
                                                                    'mdi-calendar-clock' }}
                                                            </v-icon>
                                                        </v-chip>
                                                    </div>
                                                </div>
                                                <div class="d-flex align-center justify-space-between">
                                                    <span class="d-flex align-center">
                                                        <v-icon size="small" class="mr-1">mdi-currency-usd</v-icon>
                                                        <strong>{{ formatoMoneda(venta.monto) }}</strong>
                                                    </span>
                                                    <span class="text-caption text-grey">
                                                        {{ formatFecha(venta.fecha) }}
                                                    </span>
                                                </div>
                                                <div v-if="venta.modoPago"
                                                    class="d-flex align-center justify-space-between">
                                                    <v-chip :color="getModoPagoColor(venta.modoPago)" size="x-small"
                                                        variant="tonal">
                                                        <v-icon size="x-small" class="mr-1">{{
                                                            getModoPagoIcon(venta.modoPago) }}</v-icon>
                                                        {{ getModoPagoText(venta.modoPago) }}
                                                    </v-chip>
                                                </div>
                                            </div>
                                        </div>
                                    </v-list-item-subtitle>

                                    <template #append>
                                        <div class="d-flex align-center">
                                            <v-btn icon size="small" variant="tonal" color="primary"
                                                @click="editarVentaFiltrada(index)" class="mr-2">
                                                <v-icon size="small">mdi-pencil</v-icon>
                                            </v-btn>
                                            <v-btn icon size="small" variant="tonal" color="error"
                                                @click="eliminarVentaFiltrada(index)">
                                                <v-icon size="small">mdi-delete</v-icon>
                                            </v-btn>
                                        </div>
                                    </template>
                                </v-list-item>
                            </v-slide-y-transition>
                        </v-list>
                    </v-card-text>
                </v-card>
            </v-col>
        </v-row>

        <v-row class="mt-4 mt-md-4" v-if="resumenVentas.length > 0">
            <v-col cols="12">
                <v-card elevation="3">
                    <v-card-title class="d-flex align-center pa-4 pa-md-6 pb-4">
                        <v-icon color="info" size="24" size-md="28" class="mr-2 mr-md-3">mdi-chart-pie</v-icon>
                        <span class="text-subtitle-1 text-md-h6 font-weight-medium">Resumen por Cliente</span>
                    </v-card-title>
                    <v-card-text class="">
                        <v-expansion-panels variant="accordion">
                            <v-expansion-panel v-for="(resumen, index) in resumenVentas" :key="index" class="mb-3">
                                <v-expansion-panel-title class="pa-4">
                                    <div class="d-flex align-center justify-space-between w-full">
                                        <div class="d-flex align-center">
                                            <v-avatar color="info" size="32" variant="tonal" class="mr-3">
                                                <v-icon size="small">mdi-account</v-icon>
                                            </v-avatar>
                                            <span class="mr-2 text-h6">{{ resumen.cliente }}</span>
                                        </div>
                                        <div class="d-flex align-center">
                                            <span class="text-h6 font-weight-bold text-success mr-4">
                                                {{ formatoMoneda(resumen.total) }}
                                            </span>
                                            <v-chip color="info" size="small" variant="tonal">
                                                {{ resumen.ventas.length }} ventas
                                            </v-chip>
                                        </div>
                                    </div>
                                </v-expansion-panel-title>

                                <v-expansion-panel-text class="pa-4 pt-0">
                                    <v-textarea v-model="resumen.texto" label="Mensaje para el cliente" auto-grow
                                        variant="outlined" rows="8" class="mb-4" />
                                    <div class="d-flex justify-end">
                                        <v-btn color="primary" variant="elevated" prepend-icon="mdi-content-copy"
                                            @click="copiarTexto(resumen.texto)" class="text-none">
                                            Copiar Mensaje
                                        </v-btn>
                                    </div>
                                </v-expansion-panel-text>
                            </v-expansion-panel>
                        </v-expansion-panels>
                    </v-card-text>
                </v-card>
            </v-col>
        </v-row>

        <v-snackbar v-model="snackbar" :timeout="3000" color="success" location="top" class="text-none">
            <div class="d-flex align-center">
                <v-icon class="mr-3">mdi-check-circle</v-icon>
                <span>Resumen actualizado correctamente</span>
            </div>
            <template v-slot:actions>
                <v-btn color="white" variant="text" @click="snackbar = false">
                    Cerrar
                </v-btn>
            </template>
        </v-snackbar>

        <v-dialog v-model="dialog" max-width="500" persistent>
            <v-card>
                <v-card-title class="d-flex align-center pa-4 pa-md-6 pb-4">
                    <v-icon color="primary" size="24" size-md="28" class="mr-2 mr-md-3">mdi-account-plus</v-icon>
                    <span class="text-subtitle-1 text-md-h6 font-weight-medium">Agregar Nuevo Cliente</span>
                </v-card-title>
                <v-card-text class="pa-4 pa-md-6 pt-0">
                    <v-text-field v-model="nuevoCliente" label="Nombre del cliente" variant="outlined"
                        density="comfortable" prepend-inner-icon="mdi-account"
                        :rules="[v => !!v || 'El nombre es obligatorio']" autofocus />
                </v-card-text>
                <v-card-actions class="pa-4 pa-md-6 pt-0">
                    <v-spacer></v-spacer>
                    <v-btn variant="outlined" @click="cerrarDialog" class="text-none">
                        Cancelar
                    </v-btn>
                    <v-btn color="primary" variant="elevated" @click="guardarCliente" class="text-none"
                        :disabled="!nuevoCliente">
                        Guardar Cliente
                    </v-btn>
                </v-card-actions>
            </v-card>
        </v-dialog>

        <v-dialog v-model="dialogFiltro" max-width="500" persistent>
            <v-card>
                <v-card-title class="d-flex align-center pa-md-6 pb-4">
                    <v-icon color="primary" size="24" size-md="28" class="mr-2 mr-md-3">mdi-filter</v-icon>
                    <span class="text-subtitle-1 text-md-h6 font-weight-medium">Filtrar Ventas</span>
                </v-card-title>
                <v-card-text class="pt-0">
                    <v-date-picker v-model="filtroFecha" class="" color="primary" />

                </v-card-text>
                <v-card-actions class="pa-4 pt-0">

                    <v-btn variant="outlined" @click="dialogFiltro = false" class="text-none">
                        Cancelar
                    </v-btn>
                    <v-btn color="primary" variant="elevated" @click="abrirVentasFiltradas" class="text-none">
                        Cargar Ventas
                    </v-btn>
                </v-card-actions>
            </v-card>
        </v-dialog>
    </v-container>
</template>

<script setup
    lang="ts">
    import { ref, reactive, onMounted, computed, watch } from 'vue'
    import { useClientesStore } from '../stores/clientesStore'
    import { useRetirosStore } from '../stores/retirosStore';
    import { db } from '../firebase'
    import { collection, addDoc, getDocs, updateDoc, doc } from 'firebase/firestore'
    import { useVentasStore } from '../stores/ventasStores';
    import draggable from 'vuedraggable'

    // ConfiguraciÃ³n de la aplicaciÃ³n
    const clientesStore = useClientesStore()
    const ventasStore = useVentasStore();
    const registrando = ref(false)
    const retirosStore = useRetirosStore();
    const generarRetiro = ref(true);

    // Interfaces
    interface Venta {
        id?: string;
        codigo: string;
        monto: number;
        cliente?: string;
        tipo?: string;
        fecha?: string;
        modoPago?: string;
    }

    interface Resumen {
        cliente: string;
        total: number;
        ventas: Venta[];
        texto: string;
    }

    // ESTE ES EL CAMBIO CLAVE: ventasAgregadas ahora es un ref local
    const ventasAgregadas = ref<Venta[]>([])
    const resumenVentas = ref<Resumen[]>([])
    const nuevaVenta = reactive<Venta>({
        codigo: '',
        monto: 0,
        cliente: '',
        tipo: 'diaria',
        fecha: '',
        modoPago: ''
    })

    const modosPago = [
        { text: 'Transferencia', value: 'transferencia', icon: 'mdi-bank-transfer' },
        { text: 'Efectivo', value: 'efectivo', icon: 'mdi-cash' },
        { text: 'DÃ©bito/CrÃ©dito', value: 'debito-credito', icon: 'mdi-credit-card' }
    ]

    const dialog = ref(false)
    const nuevoCliente = ref('')
    const snackbar = ref(false)
    const tipoSeleccionado = ref('diaria')
    const dialogFiltro = ref(false)
    const filtroFecha = ref('')
    const filtroTipo = ref('')
    const modoEdicion = ref(false)
    const busquedaVentas = ref('')

    const camposFormulario = ref([
        { id: 'codigo', label: 'CÃ³digo', tipo: 'codigo' },
        { id: 'monto', label: 'Monto', tipo: 'monto' },
        { id: 'cliente', label: 'Cliente (opcional)', tipo: 'cliente' },
        { id: 'modoPago', label: 'Modo de Pago (opcional)', tipo: 'modoPago' },
    ])
    const drag = ref(false)


    // Computed properties
    const totalVentas = computed(() => {
        return ventasAgregadas.value.reduce((acc, venta) => acc + venta.monto, 0)
    })

    const ventasConCliente = computed(() => {
        return ventasAgregadas.value.filter(venta => venta.cliente && venta.cliente.trim() !== '')
    })

    const esVentaDeHoy = (fecha?: string) => {
        if (!fecha) return false
        const hoy = new Date().toDateString()
        const fechaVenta = new Date(fecha).toDateString()
        return hoy === fechaVenta
    }

    const estadisticasVentas = computed(() => {
        const ventasHoy = ventasAgregadas.value.filter(v => esVentaDeHoy(v.fecha))
        const ventasAnteriores = ventasAgregadas.value.filter(v => !esVentaDeHoy(v.fecha))
        const ventasHoyConCliente = ventasHoy.filter(v => v.cliente && v.cliente.trim() !== '')
        const ventasAnterioresConCliente = ventasAnteriores.filter(v => v.cliente && v.cliente.trim() !== '')
        return {
            total: ventasAgregadas.value.length,
            conCliente: ventasConCliente.value.length,
            hoy: ventasHoy.length,
            hoyConCliente: ventasHoyConCliente.length,
            anteriores: ventasAnteriores.length,
            anterioresConCliente: ventasAnterioresConCliente.length
        }
    })

    const ventasFiltradas = computed(() => {
        let ventas = ventasAgregadas.value.filter(venta => venta.tipo === tipoSeleccionado.value)
        if (busquedaVentas.value && busquedaVentas.value.trim() !== '') {
            const terminoBusqueda = busquedaVentas.value.toLowerCase()
            ventas = ventas.filter(venta => (venta.codigo?.toLowerCase().includes(terminoBusqueda)) ||
                (venta.cliente?.toLowerCase().includes(terminoBusqueda))
            )
        }
        return ventas
    })

    const estadisticasFiltradas = computed(() => {
        const ventasHoy = ventasFiltradas.value.filter(v => esVentaDeHoy(v.fecha))
        const ventasAnteriores = ventasFiltradas.value.filter(v => !esVentaDeHoy(v.fecha))
        const ventasHoyConCliente = ventasHoy.filter(v => v.cliente && v.cliente.trim() !== '')
        const ventasAnterioresConCliente = ventasAnteriores.filter(v => v.cliente && v.cliente.trim() !== '')
        return {
            total: ventasFiltradas.value.length,
            conCliente: ventasFiltradas.value.filter(v => v.cliente && v.cliente.trim() !== '').length,
            hoy: ventasHoy.length,
            hoyConCliente: ventasHoyConCliente.length,
            anteriores: ventasAnteriores.length,
            anterioresConCliente: ventasAnterioresConCliente.length
        }
    })


    // Lifecycle
    onMounted(() => {
        clientesStore.cargarClientes()
        ventasStore.cargarVentasDelDia()
        cargarOrdenCampos()
    })


    // Funciones de utilidad
    const formatoMoneda = (valor: number) => new Intl.NumberFormat('es-CL', {
        style: 'currency',
        currency: 'CLP',
        minimumFractionDigits: 0
    }).format(valor)

    function formatFecha(fecha?: string | Date) {
        if (!fecha) return ''
        const d = typeof fecha === 'string' ? new Date(fecha) : fecha
        return d.toLocaleDateString('es-CL', {
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
        })
    }

    function getModoPagoText(value: string) {
        const modo = modosPago.find(m => m.value === value);
        return modo ? modo.text : value;
    }

    function getVentaColor(tipo: string) {
        if (tipo === 'diaria') {
            return 'info';
        }
        if (tipo === 'live') {
            return 'purple-lighten-1';
        }
        return 'grey';
    }

    function getVentaIcon(tipo: string) {
        if (tipo === 'diaria') {
            return 'mdi-calendar-today';
        }
        if (tipo === 'live') {
            return 'mdi-youtube-tv';
        }
        return 'mdi-tag-outline';
    }

    function getModoPagoColor(modoPago: string) {
        switch (modoPago) {
            case 'transferencia':
                return 'primary';
            case 'efectivo':
                return 'success';
            case 'debito-credito':
                return 'info';
            default:
                return 'grey';
        }
    }

    function getModoPagoIcon(modoPago: string) {
        switch (modoPago) {
            case 'transferencia':
                return 'mdi-bank-transfer';
            case 'efectivo':
                return 'mdi-cash';
            case 'debito-credito':
                return 'mdi-credit-card';
            default:
                return 'mdi-help-circle-outline';
        }
    }

    function abrirVentasFiltradas() {
        dialogFiltro.value = true;
    }

    function getVentaClass(venta: Venta) {
        if (venta.tipo === 'diaria') {
            return 'border-blue-lighten-4';
        } else if (venta.tipo === 'live') {
            return 'border-purple-lighten-4';
        } else {
            return '';
        }
    }

    // Funciones de drag and drop
    function cargarOrdenCampos() {
        const ordenGuardado = localStorage.getItem('ordenCamposVentas')
        if (ordenGuardado) {
            try {
                camposFormulario.value = JSON.parse(ordenGuardado)
            } catch (e) {
                console.log('Error al cargar orden de campos, usando orden por defecto')
            }
        }
    }

    function guardarOrdenCampos() {
        localStorage.setItem('ordenCamposVentas', JSON.stringify(camposFormulario.value))
    }

    function onDragEnd() {
        drag.value = false
        guardarOrdenCampos()
    }

    // Funciones de ventas
    async function registrarVenta() {
        if (!nuevaVenta.codigo || !nuevaVenta.monto) {
            alert('Por favor completa los campos obligatorios')
            return
        }
        registrando.value = true
        try {
            // AÃ±ade la nueva venta al array local (ventasAgregadas)
            ventasAgregadas.value.unshift({
                ...nuevaVenta,
                tipo: tipoSeleccionado.value,
                fecha: new Date().toISOString()
            })
            nuevaVenta.codigo = ''
            nuevaVenta.monto = 0
            nuevaVenta.cliente = ''
            nuevaVenta.modoPago = ''
        } finally {
            registrando.value = false
        }
    }

    function editarVenta(index: number) {
        const c = ventasAgregadas.value[index]
        nuevaVenta.codigo = c.codigo
        nuevaVenta.monto = c.monto
        nuevaVenta.cliente = c.cliente
        nuevaVenta.modoPago = c.modoPago || ''
        tipoSeleccionado.value = c.tipo || 'diaria'
        ventasAgregadas.value.splice(index, 1)
    }

    function eliminarVenta(index: number) {
        ventasAgregadas.value.splice(index, 1)
    }


    function editarVentaFiltrada(index: number) {
        const ventaFiltrada = ventasFiltradas.value[index]
        const indexReal = ventasAgregadas.value.findIndex(v => v.codigo === ventaFiltrada.codigo && v.monto === ventaFiltrada.monto && v.fecha === ventaFiltrada.fecha)
        if (indexReal !== -1) {
            editarVenta(indexReal)
        }
    }

    function eliminarVentaFiltrada(index: number) {
        const ventaFiltrada = ventasFiltradas.value[index]
        const indexReal = ventasAgregadas.value.findIndex(v => v.codigo === ventaFiltrada.codigo && v.monto === ventaFiltrada.monto && v.fecha === ventaFiltrada.fecha)
        if (indexReal !== -1) {
            eliminarVenta(indexReal)
        }
    }

    function agruparVentas() {
        const grupos: Record<string, Venta[]> = {}
        ventasAgregadas.value.forEach((c) => {
            const cliente = c.cliente || 'Cliente desconocido'
            if (!grupos[cliente]) grupos[cliente] = []
            grupos[cliente].push(c)
        })

        resumenVentas.value = Object.entries(grupos).map(([cliente, ventas]) => {
            const total = ventas.reduce((acc, c) => acc + c.monto, 0)
            const detalle = ventas.map(c => {
                const modoPagoInfo = c.modoPago ? `, Pago: ${getModoPagoText(c.modoPago)}` : ''
                return `- CÃ³digo: ${c.codigo}, Monto: ${formatoMoneda(c.monto)}${modoPagoInfo}`
            }).join('\n')
            const texto = `Estimado(a) ${cliente}, Este es el detalle de sus compras: ${detalle} TOTAL: ${formatoMoneda(total)} Por favor transferir a la siguiente cuenta: Nombre: Alicia Yolhet Arias Cea Banco: Mercado Pago Tipo de Cuenta: Vista NÂ° de cuenta: 1038060282 Rut: 10376458-0 Â¡Â¡Gracias!! ð Equipo de Menaje House`

            return { cliente, total, ventas, texto }
        })
        snackbar.value = true
    }

    function copiarTexto(texto: string) {
        navigator.clipboard.writeText(texto).then(() => {
            alert('Texto copiado al portapapeles â')
        })
    }

    function cerrarDialog() {
        dialog.value = false
        nuevoCliente.value = ''
    }

    function guardarCliente() {
        if (!nuevoCliente.value) return
        clientesStore.agregarCliente(nuevoCliente.value)
        nuevaVenta.cliente = nuevoCliente.value
        cerrarDialog()
    }

    function limpiarVentas() {
        ventasAgregadas.value = [];
        resumenVentas.value = [];
    }

    // Guardar ventas en Firestore
    async function guardarVentas() {
        registrando.value = true;
        try {
            if (ventasAgregadas.value.length === 0) {
                alert('No hay ventas para guardar.');
                return;
            }

            // Iteramos sobre las ventas que estÃ¡n en nuestro array local
            for (const venta of ventasAgregadas.value) {
                if (venta.id) {
                    await ventasStore.actualizarVenta(venta.id, venta);
                    console.log(`Venta con ID ${venta.id} actualizada correctamente.`);
                } else {
                    await ventasStore.agregarVenta(venta);
                    console.log('Nueva venta agregada correctamente.');
                }
            }

            // Limpiamos el array local despuÃ©s de haber guardado todo
            ventasAgregadas.value = [];
            // Recargamos el listado desde la base de datos para mostrar el estado final
            await ventasStore.cargarVentasDelDia();

            alert('â Ventas guardadas exitosamente.');
        } catch (error) {
            console.error('Error al guardar las ventas:', error);
            alert('â OcurriÃ³ un error al guardar las ventas.');
        } finally {
            registrando.value = false;
        }
    }
</script>

<style scoped>
/* Estilos globales para el componente */
:root {
    --color-primary: #1976D2;
    --color-success: #4CAF50;
    --color-warning: #FB8C00;
    --color-info: #00BCD4;
}

.v-container {
    max-width: 1400px;
    margin: auto;
}

.h-100 {
    height: 100%;
}

.gap-4 {
    gap: 16px;
}

.gap-3 {
    gap: 12px;
}

/* Barra fija */
.barra-fija {
    position: sticky;
    top: 0;
    z-index: 10;
    padding-bottom: 24px;
    background-color: #f5f5f5;
}

/* Mejoras visuales para el modo de ediciÃ³n */
.campo-formulario.modo-edicion {
    border: 2px dashed #9e9e9e;
    padding: 16px;
    border-radius: 8px;
    background-color: #fafafa;
    cursor: grab;
}

.campos-draggable {
    min-height: 200px;
    /* O el que necesites */
}

/* Mejoras en el listado de ventas */
.v-list-item:hover {
    background-color: #f9f9f9;
    cursor: pointer;
}

.v-list-item.border-blue-lighten-4 {
    border-left: 5px solid #BBDEFB !important;
}

.v-list-item.border-purple-lighten-4 {
    border-left: 5px solid #e1bee7 !important;
}

.v-list-item.border-warning {
    border-left: 5px solid #ff9800 !important;
    transform: rotate(2deg);
}

/* Mejoras de animaciÃ³n */
.v-list-item {
    transition: all 0.3s ease;
}

.v-list-item:hover {
    transform: translateX(1px);
    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);
}

/* Estilos para chips */
.v-chip {
    font-weight: 500;
}

/* Mejoras en botones */
.v-btn {
    font-weight: 500;
    letter-spacing: 0.5px;
}

/* Estilos para cards */
.v-card {
    border-radius: 16px;
}

/* Mejoras en inputs */
.v-text-field,
.v-autocomplete,
.v-number-input {
    border-radius: 8px;
}

/* Animaciones suaves */
* {
    transition: all 0.2s ease;
}

/* Mejoras responsive */
@media (max-width: 768px) {
    .v-container {
        padding: 16px !important;
    }

    .v-card {
        border-radius: 12px !important;
    }

    .barra-fija {
        padding-bottom: 16px;
    }
}
</style>